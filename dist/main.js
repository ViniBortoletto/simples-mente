const btnMenu=document.getElementById("btn__menu"),navMenu=document.getElementById("nav__menu"),navLogo=document.querySelector(".nav__logo"),navIcons=document.querySelectorAll(".nav__icon");btnMenu.addEventListener("click",()=>{navMenu.classList.toggle("toggle-menu"),btnMenu.classList.toggle("spin-menuBtn"),navLogo.classList.toggle("toggle-menuIcon"),navIcons.forEach(icon=>{icon.classList.toggle("toggle-menuIcon")})});class Products{async getProducts(){try{let products=(await client.getEntries({content_type:"product"})).items;return products=products.map(product=>{const{id:id}=product.sys,{title:title,price:price}=product.fields;return{id:id,title:title,price:price,image:product.fields.image.fields.file.url}}),products}catch(error){console.log(error)}}}class Storage{static saveProducts(products){localStorage.setItem("products",JSON.stringify(products))}static getProduct(id){return JSON.parse(localStorage.getItem("products")).find(product=>product.id===id)}static saveCart(cart){localStorage.setItem("cart",JSON.stringify(cart))}static getCart(){return localStorage.getItem("cart")?JSON.parse(localStorage.getItem("cart")):[]}}class UI{toggleCart(){cartOverlay.classList.toggle("toggleOverlay"),cartDOM.classList.toggle("toggleCart"),0===cart.length?emptyCartWarning.style.display="block":emptyCartWarning.style.display="none"}displayProducts(products){productsCarousel();let result="";products.forEach(product=>{result+=`\n        <div class="gallery__item">\n          <figure>\n            <img\n              class="galleryItem__img"\n              src=${product.image}\n              alt="tênis"\n            />\n          </figure>\n\n          <div class="galleryItem__text">\n            <div>\n              <h1 class="galleryItem__title">${product.title}</h1>\n              <h2 class="galleryItem__price">\n              R$ ${product.price}\n              </h2>\n            </div>\n\n            <div class="galleryItem__btnBox">\n              <button class="galleryItem__btn" data-id=${product.id}>\n                <i class="fas fa-cart-plus"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      `,productsDOM.innerHTML=result})}getGalleryItemBtns(){const buttons=[...document.querySelectorAll(".galleryItem__btn")];buttonsDOM=buttons,buttons.forEach(button=>{let id=button.dataset.id;cart.find(item=>item.id===id)&&(button.innerHTML="\n          <p>Item já adicionado</p>\n          <p>Ver carrinho</p>\n        "),button.addEventListener("click",()=>{if(cart.find(item=>item.id===id))this.toggleCart();else{let cartItem={...Storage.getProduct(id),amount:1};cart=[...cart,cartItem],Storage.saveCart(cart),this.setCartValues(cart),this.addCartItem(cartItem),button.innerHTML="\n              <p>Item já adicionado</p>\n              <p>Ver carrinho</p>\n          ",this.toggleCart()}})})}setCartValues(cart){let temporaryTotal=0,itemsTotal=0;cart.map(item=>{temporaryTotal+=item.price*item.amount,itemsTotal+=item.amount}),cartTotal.innerText=parseFloat(temporaryTotal.toFixed(2)),cartMarker.innerText=itemsTotal}addCartItem(cartItem){const div=document.createElement("div");div.classList.add("cart__item");const{title:title,price:price,id:id,image:image,amount:amount}=cartItem;div.innerHTML=`\n       <img src=${image} alt="produto" />\n\n      <div>\n        <h4>${title}</h4>\n        <h5>R$ ${price}</h5>\n        <button  class="item__remove" data-id=${id}>\n          remover\n        </button>\n      </div>\n\n      <div class="item__amountBox">\n        <button>\n          <i class="fas fa-chevron-up increaseQuantity" data-id=${id}></i>\n        </button>\n\n        <p>${amount}</p>\n\n        <button>\n          <i class="fas fa-chevron-down decreaseQuantity" data-id=${id}></i>\n        </button>\n      </div>\n    `,cartContent.appendChild(div)}populateCart(cart){cart.forEach(item=>this.addCartItem(item))}cardLogic(){emptyCartBtn.addEventListener("click",()=>{this.emptyCart()}),cartContent.addEventListener("click",event=>{if(event.target.classList.contains("item__remove")){let removeItem=event.target,id=removeItem.dataset.id,cartItem=removeItem.parentElement.parentElement;cartItem.style.opacity=0,setTimeout(()=>{cartContent.removeChild(cartItem),this.removeItem(id)},200)}else if(event.target.classList.contains("increaseQuantity")){let arrowUp=event.target,id=arrowUp.dataset.id;const itemAmount=arrowUp.parentElement.nextElementSibling;let tempItem=cart.find(item=>item.id===id);tempItem.amount=tempItem.amount+1,itemAmount.innerText=tempItem.amount,this.setCartValues(cart),Storage.saveCart(cart)}else if(event.target.classList.contains("decreaseQuantity")){let arrowDown=event.target,id=arrowDown.dataset.id;const itemAmount=arrowDown.parentElement.previousElementSibling;let tempItem=cart.find(item=>item.id===id);tempItem.amount=tempItem.amount-1,tempItem.amount>0?(this.setCartValues(cart),itemAmount.innerText=tempItem.amount,Storage.saveCart(cart)):(cartContent.removeChild(arrowDown.parentElement.parentElement.parentElement),this.removeItem(id))}})}removeItem(id){cart=cart.filter(item=>item.id!==id),this.setCartValues(cart),Storage.saveCart(cart),this.getSingleBtn(id).innerHTML="<i class='fas fa-cart-plus'></i>",0===cart.length&&(emptyCartWarning.style.display="block")}emptyCart(){for(cart.map(item=>item.id).forEach(id=>this.removeItem(id));cartContent.children.length>1;)cartContent.removeChild(cartContent.children[1]);this.toggleCart()}getSingleBtn(id){return buttonsDOM.find(button=>button.dataset.id===id)}setupAPP(){cartBtn.addEventListener("click",this.toggleCart),closeCartBtn.addEventListener("click",this.toggleCart),cart=Storage.getCart(),this.setCartValues(cart),this.populateCart(cart),document.addEventListener("click",event=>{event.target.classList.contains("cart__overlay")&&this.toggleCart()})}}const client=contentful.createClient({space:"dsfbqtjs2w7x",accessToken:"nGCoarI8AWuvW7D6RQNLtKDiALXngKQ47RYb5P8ELRo"}),mainContainer=document.querySelector("main"),cartBtn=document.getElementById("nav__icon--cart"),cartMarker=document.getElementById("cart__marker"),closeCartBtn=document.getElementById("cart__closeBtn"),emptyCartBtn=document.getElementById("cart__btn--empty"),emptyCartWarning=document.querySelector(".cart__item--empty"),cartDOM=document.getElementById("cart"),cartOverlay=document.getElementById("cart__overlay"),cartTotal=document.getElementById("cart__total--value"),cartContent=document.getElementById("cart__content"),productsDOM=document.getElementById("produtos__gallery");let cart=[],buttonsDOM=[];function productsCarousel(){mainContainer.classList.contains("produtos")&&setTimeout(()=>{const elem=document.querySelector(".carousel");new Flickity(elem,{cellAlign:"center",contain:!1,autoPlay:!0,wrapAround:!0})},100)}document.addEventListener("DOMContentLoaded",()=>{const ui=new UI,products=new Products;ui.setupAPP(),products.getProducts().then(products=>{mainContainer.classList.contains("produtos")&&ui.displayProducts(products),Storage.saveProducts(products)}).then(()=>{ui.getGalleryItemBtns(),ui.cardLogic()})});const formDOM=document.getElementById("form"),name=document.getElementById("nome"),email=document.getElementById("email"),subject=document.getElementById("assunto"),msg=document.getElementById("mensagem");let hasError=!1,formError=!0;const resetBtn=document.getElementById("form__btn--cancelar"),submitBtn=document.getElementById("form__btn--enviar");class MyForm{validate(){Name.validate(),Email.validate(),Subject.validate(),Message.validate()}fieldIsEmpty(field,error,errorMsg){0===field.value.length?(error.innerHTML=errorMsg,hasError=!0,formError=!0):this.clearErrors(error)}fieldIsTooShort(charlength,field,error,errorMsg){field.value.length<charlength?(error.innerHTML=errorMsg,hasError=!0,formError=!0):this.clearErrors(error)}borderColor(field){hasError?field.style.borderColor="crimson":(field.style.borderColor="white",field.addEventListener("focus",()=>{field.style.borderColor="rgb(72, 138, 224)"}),field.addEventListener("blur",()=>{field.style.borderColor="white"}))}clearErrors(error){error.innerHTML="&nbsp",hasError=!1,formError=!1}reset(){const inputs=document.querySelectorAll("input"),textarea=document.querySelector("textarea");document.querySelectorAll(".erro").forEach(error=>{this.clearErrors(error)}),inputs.forEach(input=>{this.borderColor(input)}),this.borderColor(textarea),form.reset()}}const myForm=new MyForm;mainContainer.classList.contains("contato")&&(formDOM.addEventListener("submit",event=>{event.preventDefault()}),resetBtn.addEventListener("click",()=>{confirm("Tem certeza de que quer limpar o formulário?")&&myForm.reset()}),submitBtn.addEventListener("click",()=>{myForm.validate(),formError||setTimeout(()=>{alert("Mensagem enviada!"),myForm.reset()},500)}),setTimeout(()=>{Name.onBlur(),Email.onBlur(),Subject.onBlur(),Message.onBlur(),Message.resizeTextarea()},100));class Email{static validate(){const error=document.getElementById("erro--email");myForm.fieldIsEmpty(email,error,"Digite seu email"),hasError||/\S+@\S+\.\S+/.test(email.value)||(error.innerHTML="Email inválido",hasError=!0,formError=!0),myForm.borderColor(email)}static onBlur(){email.addEventListener("blur",()=>{this.validate()})}}class Message{static validate(){const error=document.getElementById("erro--mensagem");myForm.fieldIsEmpty(msg,error,"Digite sua mensagem"),hasError||myForm.fieldIsTooShort(20,msg,error,"Sua mensagem é muito curta."),myForm.borderColor(msg)}static resizeTextarea(){msg.addEventListener("focus",()=>{msg.setAttribute("rows","10")})}static onBlur(){msg.addEventListener("blur",()=>{this.validate(),!msg.value&&msg.setAttribute("rows","1")})}}class Name{static validate(){const error=document.getElementById("erro--nome");myForm.fieldIsEmpty(name,error,"Digite seu nome"),hasError||myForm.fieldIsTooShort(3,name,error,"Nome deve conter pelo menos 3 letras"),myForm.borderColor(name)}static onBlur(){name.addEventListener("blur",()=>{this.validate()})}}class Subject{static validate(){const error=document.getElementById("erro--assunto");myForm.fieldIsEmpty(subject,error,"Digite um assunto"),myForm.borderColor(subject)}static onBlur(){subject.addEventListener("blur",()=>{this.validate()})}}